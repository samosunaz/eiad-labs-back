<?php
/**
 * Created by PhpStorm.
 * User: samosunaz
 * Date: 20/09/18
 * Time: 19:19
 */

namespace App\Http\Controllers;


use App\Repositories\UserRepository;
use Firebase\JWT\JWT;
use Illuminate\Http\Request;
use Illuminate\Http\Response;
use Symfony\Component\HttpKernel\Exception\BadRequestHttpException;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Symfony\Component\HttpKernel\Exception\UnauthorizedHttpException;

class UserController extends Controller
{
  public function __construct(Request $request, UserRepository $repository)
  {
    parent::__construct($request, $repository);
  }

  public function add()
  {
    $body = $this->request->all();
    if ($body['action'] == 'login') {

      $user = $this->repository->findBy('email', $body['email']);

      if (is_null($user)) {
        throw new NotFoundHttpException();
      }

      if ($user->password != $body['password']) {
        throw new UnauthorizedHttpException('');
      }

      $payload = array();
      $payload['token'] = JWT::encode($user, env('JWT_KEY'), 'HS256');
      $payload['user'] = $user;

      return new Response($payload, Response::HTTP_OK);

    } elseif ($body['action'] == 'authenticate') {
      $alg['alg'] = ["HS256"];
      $jwt = $body['token'];
      try {
        $decoded = JWT::decode($jwt, env('JWT_KEY'), array('HS256'));
        if ($decoded->id) {
          $user = $this->repository->find($decoded->id);
        }
      } catch (\Exception $e) {
        throw new BadRequestHttpException();
      }
      return new Response($user, Response::HTTP_OK);
    }

    return parent::add(); // TODO: Change the autogenerated stub

  }

  public function all()
  {
    return parent::all(); // TODO: Change the autogenerated stub
  }

  public function delete($id)
  {
    return parent::delete($id); // TODO: Change the autogenerated stub
  }

  public function findById($id)
  {
    return parent::findById($id); // TODO: Change the autogenerated stub
  }
}